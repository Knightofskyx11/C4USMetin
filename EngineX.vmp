<?xml version="1.0" encoding="UTF-8" ?>
<Document Version="2">
    <Protection InputFileName="" Options="985032">
        <Messages />
        <Folders />
        <Procedures>
            <Procedure MapAddress="MainForm::Menu(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="_DllMain@12" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::Initialize(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ImGui::BeginPopup(char const *,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ImGui::PopupButton(char const *,void *,struct ImVec2 const &amp;)" Options="0" CompilationType="1" />
            <Procedure MapAddress="ImGui::OpenPopup(char const *,int)" Options="0" />
            <Procedure MapAddress="ImGui::OpenPopupEx(unsigned int,int)" Options="0" CompilationType="1" />
            <Procedure MapAddress="ImGui::EndPopup(void)" Options="0" />
            <Procedure MapAddress="ImGui::BeginPopupModal(char const *,bool *,int)" Options="0" CompilationType="1" />
            <Procedure MapAddress="Main::Main(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="MainCore::Crack(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="Security::NewIsDebuggerPresent(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewCreateThread(struct _SECURITY_ATTRIBUTES *,unsigned long,unsigned long (*)(void *),void *,unsigned long,unsigned long *)" Options="0" CompilationType="1" />
            <Procedure MapAddress="Security::NewLoadLibraryA(char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewNtAllocateVirtualMemory(void *,void * *,unsigned long,unsigned long *,unsigned long,unsigned long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewNtFreeVirtualMemory(void *,void * *,unsigned long *,unsigned long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewNtMapViewOfSection(void *,void *,void * *,unsigned long,unsigned long,union _LARGE_INTEGER *,unsigned long *,enum Security::_SECTION_INHERIT,unsigned long,unsigned long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewNtUnmapViewOfSection(void *,void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewPy_InitModule4(char const *,unsigned long *,char const *,unsigned long *,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Security::NewCallNextHookEx(struct HHOOK__ *,int,unsigned int,long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Main::~Main(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="MainCore::Initialize(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="MiscExtension::OpenWebiste(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Configuration::OnStop(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="Protection::OnMenu(void)" Options="0" CompilationType="1" />
            <Procedure MapAddress="ProcessExtension::CreateThreadSafe(unsigned long (*const)(void *),void * const)" Options="0" CompilationType="1" />
            <Procedure MapAddress="ImGui::Text(char const *,...)" Options="0" CompilationType="1" />
        </Procedures>
        <Objects />
    </Protection>
    <Script>
        <![CDATA[function GetRandomSectionName()
   local res = ""
   for i = 1, 8 do
      res = res .. string.char(32 + math.random(string.byte("z") - 32))
   end
   return res
end

function OnAfterSaveFile()
   local file = vmprotect.core():outputArchitecture()
   for i = 1, file:segments():count() do
      segment = file:segments():item(i)
      name = GetRandomSectionName()
      print(string.format("Section \"%s\" is renamed to \"%s\"", segment:name(), name))
      segment:setName(name)
   end
end]]>
</Script>
    <DLLBox>
        <Folders />
    </DLLBox>
    <LicenseManager />
</Document>
